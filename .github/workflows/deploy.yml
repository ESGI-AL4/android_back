name: Deploy to VPS

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Build
        run: npm run build


  deploy:
    environment: Back android
    runs-on: ubuntu-latest
    needs: quality
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@db:5432/${{ secrets.POSTGRES_DB }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to VPS

        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            if [ -d "/image/android_back" ]; then
              rm -rf /image/android_back
            fi
            git clone https://github.com/ESGI-AL4/android_back.git /image/android_back
            cd /image/android_back
            export POSTGRES_USER=${{ env.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ env.POSTGRES_DB }}
            export DATABASE_URL=${{ env.DATABASE_URL }}
            docker stop android_back-api-server
            docker system prune -af --volumes
            docker compose -f "docker-compose.prod.yaml" up -d --build