// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  pseudo        String?
  firstName     String?
  lastName      String?
  password      String
  role          String         @default("user")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  registrations Registration[]
  meetings      Meeting[]      @relation("UserMeetings")
}

model Meeting {
  id            Int            @id @default(autoincrement())
  title         String
  description   String?
  date          DateTime
  location      String?
  capacity      Int?
  creatorId     Int
  creator       User           @relation(fields: [creatorId], references: [id], name: "UserMeetings")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  registrations Registration[]
  image         String?
}

model Registration {
  id        Int      @id @default(autoincrement())
  userId    Int
  meetingId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  meeting   Meeting  @relation(fields: [meetingId], references: [id])

  @@unique([userId, meetingId])
}

enum NewsCategory {
  PRESSE
  TECHNOLOGIE
  ECONOMIE
}

model News {
  id          Int       @id @default(autoincrement())
  title       String
  body        String
  image       String?
  author      String
  publishedAt DateTime  @default(now())
  category    NewsCategory
  link        String    @unique
}
